rule("graphviz")
    set_extensions(".dot", ".gv")
    on_load(function (target)
        target:set("targetdir", path.join("build", "asset"))
        os.mkdir(target:targetdir())
        target:set("kind", "object")
    end)
    on_build_file(function (target, sourcefile, opt)
        import("lib.detect.find_tool")
        import("core.project.depend")
        import("utils.progress")
        local dot = assert(find_tool("dot", {check="-V"}), "dot not found!")
        os.vrunv(dot.program, {"-Tpng", "-o", path.join(target:targetdir(), target:name() .. ".png"), sourcefile})
        progress.show(opt.progress, "building %s.png", target:name())
    end)
    on_link(function (target)
    end)
rule_end()

rule("ppm_image")
    set_extensions(".ppm")
    on_load(function (target)
        target:set("targetdir", path.join("build", "asset"))
        os.mkdir(target:targetdir())
        target:set("kind", "object")
    end)
    on_build_file(function (target, sourcefile, opt)
        import("lib.detect.find_tool")
        import("core.project.depend")
        import("utils.progress")
        -- print("building file: %s", sourcefile)
        local py = assert(find_tool("python", {check="--version"}), "python not found!")
        os.vrunv(py.program, {"doc/script/ppm2png.py", "--ppm", sourcefile, "--png", path.join(target:targetdir(), target:name() .. ".png")})
    end)
    on_link(function (target)
    end)
rule_end()

rule("python_result")
    set_extensions(".py")
    on_load(function (target)
        target:set("targetdir", path.join("build", "asset"))
        os.mkdir(target:targetdir())
        target:set("kind", "object")
    end)
    on_build_file(function (target, sourcefile, opt)
        import("lib.detect.find_tool")
        import("core.project.depend")
        import("utils.progress")
        print("building file: %s", sourcefile)
        local py = assert(find_tool("python", {check="--version"}), "python not found!")
        os.vrunv(py.program, {sourcefile, "--target", path.join(target:targetdir(), target:name() .. ".png")})
        -- progress.show(opt.progress, "moving %s", sourcefile)
    end)
    on_link(function (target)
    end)
rule_end()

rule("direct_image")
    set_extensions(".png", ".jpg", ".jpeg", ".pdf", ".eps")
    on_load(function (target)
        target:set("targetdir", path.join("build", "asset"))
        os.mkdir(target:targetdir())
        target:set("kind", "object")
    end)
    on_build_file(function (target, sourcefile, opt)
        import("utils.progress")
        os.cp(sourcefile, target:targetdir())
        -- progress.show(opt.progress, "moving %s", sourcefile)
    end)
rule_end()

rule("figure")
    add_deps("graphviz", "direct_image", "python_result", "ppm_image")
rule_end()

function add_img(name, ext)
    ext = ext or "png"
    target(name)
        add_rules("direct_image")
        add_files(name.."."..ext)
    target_end()
end

function add_dot(name) 
    target(name)
        add_rules("figure")
        add_files(name .. ".dot")
    target_end()
end

function add_py(name)
    target(name)
        add_rules("figure")
        add_files(name .. ".py")
    target_end()
end

function add_ppm(name)
    target(name)
        add_rules("ppm_image")
        add_files(name .. ".ppm")
    target_end()
end